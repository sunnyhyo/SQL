-- CH5 SELECT 데이터 조회

/* 01. 데이터 조회
	SELECT [DISTINCT] {*, column[Alias]}  -- 에스터리스크, 모든(all) 칼럼의 데이터 수정
	FROM table_name; */


-- 칼럼 이름을 명시해서 특정 칼럼만 보기 

SELECT * 
FROM EMPLOYEE;

SELECT ENO, ENAME
FROM EMPLOYEE;

-- 산술연산자 
/* +, - ,*, / 
   여러가지 산술연산자를 한번에 사용하면 /,* 가 우선순이 높음 */
SELECT ENAME, SALARY, SALARY *12
FROM EMPLOYEE;

-- 1.4 NULL 
/* 
- 0 아님
- 빈공간도 아님
- 미확정, 알 수 없는 값 
- 어떤 값인진 알 수 없지만 값이 존재하고 잇음
- ? 혹은 infinite 의미 
- 연산, 할당 불가능 */


-- 연봉구하기 
SELECT ENAME, SALARY, JOB, DNO, COMMISSION, 
	SALARY *12, SALARY*12 + COMMISSION
FROM EMPLOYEE;
/*
한예슬, 커미션 값이 저장되어 있으므로 제대로 연봉계산 가능
감우성, 커미션이 없더라도 0 이라고 입력되어 있으면 연봉계산 제대로 된다
영업직이 아닌 경우, 커미션이 널 값으로 저장되어 있으므로 연봉계산 결과도 널값으로 구해지는 모순
*/


-- 연봉 제대로 구하기 
/*ISNULL 사용. 연봉을 제대로 구하기 위해서 NULL 값을 0으로 바꾸어 계산 */

SELECT ENAME, SALARY, JOB, DNO, ISNULL(COMMISSION,0),
	SALARY*12, SALARY*12 + ISNULL(COMMISSION, 0)
FROM EMPLOYEE;		

-- 컬럼명에 별칭 지정하는 AS 연산자 
/* AS (ALIAS) 컬럼 명에 별칭 부여 */
SELECT ENAME, SALARY*12 +ISNULL(COMMISSION, 0) AS 연봉
FROM EMPLOYEE;

SELECT ENAME, SALARY*12 +ISNULL(COMMISSION, 0) 연봉 -- AS 생략가능
FROM EMPLOYEE;

SELECT ENAME, SALARY*12 +ISNULL(COMMISSION, 0) "연  봉" -- ""로 별칭 지정하기, '', "", []
FROM EMPLOYEE;

--DISTINCT 중복된 데이터 한번 씩 출력

SELECT DNO
FROM EMPLOYEE;

SELECT DISTINCT DNO  -- 중복되는 행 한번 씩 출력 
FROM EMPLOYEE;


/* 02. 특정조건의 데이터만 조회하는 WHERE 조건
	SELECT * [column1, column2, column3]
	FROM table_name
	WHERE column_name = 비교대상 값; */

SELECT *
FROM EMPLOYEE 
WHERE SALARY >= 500;

-- 비교연산자 
/* =, <>, >, <, >=, <= !=, ^= */

SELECT * 
FROM EMPLOYEE
WHERE DNO = 10;


SELECT *
FROM EMPLOYEE 
WHERE ENAME = '이문세'; -- 문자열은 따옴표 안

SELECT *
FROM EMPLOYEE 
WHERE HIREDATE < '2005/01/01'; -- 날짜 따옴표 안 


-- 논리연산자 
/* AND, OR, NOT */

SELECT *
FROM EMPLOYEE 
WHERE DNO = 10 AND JOB = '과장';

SELECT *
FROM EMPLOYEE
WHERE DNO = 10 OR JOB = '과장';

SELECT *
FROM EMPLOYEE 
WHERE DNO = 10;

SELECT *
FROM EMPLOYEE 
WHERE NOT DNO = 10;

SELECT *
FROM EMPLOYEE 
WHERE DNO <> 10 ;

SELECT *
FROM EMPLOYEE 
WHERE DNO != 10 ;

SELECT *
FROM EMPLOYEE 
WHERE SALARY >= 400 AND SALARY <= 500;

SELECT *
FROM EMPLOYEE 
WHERE SALARY > 400 OR SALARY < 500;

SELECT *
FROM EMPLOYEE 
WHERE COMMISSION = 80 OR COMMISSION = 100 OR COMMISSION = 200;

-- BETWEEN AND 연산자 
SELECT *
FROM EMPLOYEE
WHERE SALARY BETWEEN 400 AND 500; 
-- WHERE SALARY >= 400 AND SALARY <= 500

SELECT *
FROM EMPLOYEE
WHERE SALARY NOT BETWEEN 400 AND 500;
-- WHERE SALARY > 400 OR SALARY < 500

SELECT *
FROM EMPLOYEE 
WHERE HIREDATE BETWEEN '2003/01/01' AND '2003/12/31';

-- IN 연산자
SELECT *
FROM EMPLOYEE 
WHERE COMMISSION IN(80,100,200);

SELECT *
FROM EMPLOYEE 
WHERE COMMISSION NOT IN(80,100,200);

-- LIKE 연산자와 와일드 카드 
/* % 문자가 없거나 하나 이상의 문자가 어떤 값이 와도 상관없다
   _ 하나의 문자가 어떤 값이 와도 상관 없다
   
   LIKE 와일드카드
   검색하고자 하는 값을 정확히 모를 경우 , 특정 문자 포함되기만 하고 그 이전이나 이후에 어떤 문자가 몇 개가 오든지 상관 없다는 의미*/

SELECT *
FROM EMPLOYEE 
WHERE ENAME LIKE '이%';

SELECT *
FROM EMPLOYEE 
WHERE ENAME LIKE '%성%';

SELECT *
FROM EMPLOYEE 
WHERE ENAME LIKE '%성';

SELECT * 
FROM EMPLOYEE 
WHERE ENAME LIKE '_성%';

SELECT *
FROM EMPLOYEE
WHERE ENAME LIKE '__성';

SELECT *
FROM EMPLOYEE 
WHERE ENAME NOT LIKE '%성%';

-- NULL을 위한 연산자 
SELECT ENAME, DNO, COMMISSION
FROM EMPLOYEE ;

SELECT ENAME, DNO, COMMISSION
FROM EMPLOYEE 
WHERE COMMISSION = NULL; -- NULL 이 저장되어 있는 경우 = 로 판단 불가능함

SELECT ENAME, DNO, COMMISSION
FROM EMPLOYEE 
WHERE COMMISSION IS NULL;

SELECT ENAME, DNO, COMMISSION
FROM EMPLOYEE 
WHERE COMMISSION IS NOT NULL;


/* 03. ORDER BY 정렬 
	SELECT column_name 
	FROM table_name 
	WHERE 조건절
	ORDER BY column_name sort */

-- ASC 오름차순 정렬 
SELECT *
FROM EMPLOYEE 
ORDER BY SALARY ASC;

SELECT *
FROM EMPLOYEE 
ORDER BY SALARY;

SELECT *
FROM EMPLOYEE
ORDER BY SALARY DESC;

SELECT *
FROM EMPLOYEE 
ORDER BY ENAME; 

SELECT *
FROM EMPLOYEE 
ORDER BY HIREDATE ASC;

SELECT *
 FROM EMPLOYEE 
 ORDER BY SALARY DESC, ENAME ASC;


/* 04. 원하는 개수 만큼의 데이터를 구하는 TOP 
	SELECT TOP n [PERCENT][WITH TIES] select_list
	FROM ... 
	[WHERE ...]
	[ORDER BY ...] */

-- 급여를 많이 받는 상위 5명의 사원 출력 
SELECT TOP(5) *
FROM EMPLOYEE
ORDER BY SALARY DESC;

SELECT TOP(5) *
FROM EMPLOYEE
ORDER BY SALARY DESC, ENAME ASC;

SELECT TOP(5) WITH TIES *
FROM EMPLOYEE 
ORDER BY SALARY DESC;

SELECT TOP(20) PERCENT *
FROM EMPLOYEE
ORDER BY SALARY DESC;


-- 연습문제 
SELECT ENAME, SALARY, HIREDATE
FROM EMPLOYEE;

SELECT DNO
FROM DEPARTMENT;

SELECT DNAME
FROM DEPARTMENT;

SELECT DNO AS 부서번호, DNAME AS 부서이름 
FROM DEPARTMENT;

SELECT JOB 
FROM EMPLOYEE;

SELECT DISTINCT JOB 
FROM EMPLOYEE;

SELECT ENO, ENAME, SALARY 
FROM EMPLOYEE 
WHERE SALARY <= 300;

SELECT ENO, ENAME, SALARY
FROM EMPLOYEE
WHERE ENAME = '오지호';

SELECT ENO, ENAME, SALARY 
FROM EMPLOYEE 
WHERE SALARY = 300 OR SALARY =500;

SELECT ENO, ENAME, SALARY
FROM EMPLOYEE 
WHERE SALARY IN(300, 500);

SELECT ENO, ENAME, SALARY 
FROM EMPLOYEE 
WHERE SALARY <> 250 AND SALARY <>300 AND SALARY <> 500;

SELECT ENO, ENAME, SALARY 
FROM EMPLOYEE 
WHERE SALARY NOT IN(250, 300, 500);

SELECT ENO,ENAME 
FROM EMPLOYEE
WHERE ENAME LIKE '김%';

SELECT *
FROM EMPLOYEE 
WHERE MANAGER IS NULL;

SELECT *
FROM EMPLOYEE 
WHERE JOB = '사장';

SELECT ENO, ENAME, JOB, HIREDATE
FROM EMPLOYEE 
ORDER BY HIREDATE ASC;

SELECT DNO, ENO, ENAME, JOB, HIREDATE
FROM EMPLOYEE 
ORDER BY DNO ASC, HIREDATE ASC;

SELECT DNO, ENO, ENAME, JOB, HIREDATE
FROM EMPLOYEE 
ORDER BY DNO ASC, ENAME ASC;
